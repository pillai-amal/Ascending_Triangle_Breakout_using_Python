from scipy.signal import argrelextrema
import matplotlib.pyplot as plt
import math
import numpy as np
# from check_ema import make_time_series
from time_series_frmdb import make_time_series
import pandas as pd
from finta import TA
from matplotlib.pyplot import figure
import openpyxl
import datetime as dt
import os

def bo_potential(): 
    name = str(dt.date.today()) + '_potential_breakout'
    parentdir = 'C:/Users/pillai_amal/NSE_AMAL/BreakOut Images' # specify directory for storing the potential_breakout images
    path = os.path.join(parentdir,name)
    mode = 0o777
    os.mkdir(path, mode)


    tickerlis, rsilis, mfilis, dmxlis, squlis, dmxlis_p, price = [], [], [], [], [], [], []
    brokenout = []
    m_max_lis,m_min_lis = [], []
    image_name = "%s.png"
    # add a list of tickers you want to check for ascending triangle formation 
    ticker_lis = ["20MICRONS","21STCENMGM","3MINDIA","5PAISA","63MOONS","A2ZINFRA","AAKASH","AAREYDRUGS","AARON","AARTIDRUGS","AARTIIND","AARTISURF","AARVEEDEN","AARVI","AAVAS","ABAN","ABB","ABBOTINDIA","ABCAPITAL","ABFRL","ABMINTLLTD","ABSLBANETF","ABSLNN50ET","ACC","ACCELYA","ACCURACY","ACE","ACRYSIL","ADANIENT","ADANIGREEN","ADANIPORTS","ADANIPOWER","ADFFOODS","ADORWELD","ADSL","ADVANIHOTR","ADVENZYMES","AEGISCHEM","AFFLE","AGARIND","AGROPHOS","AHLADA","AHLEAST","AHLUCONT","AHLWEST","AIAENG","AJANTPHARM","AJOONI","AKASH","AKG","AKSHARCHEM","AKZOINDIA","ALANKIT","ALBERTDAVD","ALEMBICLTD","ALICON","ALKALI","ALKEM","ALKYLAMINE","ALLCARGO","ALLSEC","ALMONDZ","ALOKINDS","ALPA","ALPHAGEO","AMARAJABAT","AMBER","AMBICAAGAR","AMBIKCO","AMBUJACEM","AMDIND","AMIORG","AMJLAND","AMRUTANJAN","ANANTRAJ","ANDHRAPAP","ANDHRSUGAR","ANDREWYU","ANGELBRKG","ANIKINDS","ANMOL","ANSALAPI","ANSALHSG","ANUP","ANURAS","APARINDS","APCL","APCOTEXIND","APEX","APLAPOLLO","APLLTD","APOLLO","APOLLOHOSP","APOLLOPIPE","APOLLOTYRE","APOLSINHOT","APTECHT","APTUS","ARCHIDPLY","ARENTERP","ARIES","ARIHANT","ARIHANTCAP","ARIHANTSUP","ARMANFIN","AROGRANITE","ARROWGREEN","ARSHIYA","ARSSINFRA","ARTEMISMED","ARVIND","ARVINDFASN","ARVSMART","ASAHIINDIA","ASAHISONG","ASALCBR","ASHAPURMIN","ASHIANA","ASHIMASYN","ASHOKA","ASHOKLEY","ASIANHOTNR","ASIANPAINT","ASIANTILES","ASPINWALL","ASTEC","ASTERDM","ASTRAL","ASTRAMICRO","ASTRAZEN","ASTRON","ATFL","ATUL","ATULAUTO","AUBANK","AUROPHARMA","AUTOAXLES","AUTOIND","AVADHSUGAR","AVANTIFEED","AVTNPL","AWHCL","AXISBANK","AXISBNKETF","AXISBPSETF","AXISCADES","AXISCETF","AXISGOLD","AXISHCETF","AXISNIFTY","AXISTECETF","AYMSYNTEX","BAFNAPH","BAJAJ-AUTO","BAJAJCON","BAJAJELEC","BAJAJFINSV","BAJAJHLDNG","BAJFINANCE","BALAJITELE","BALAMINES","BALAXI","BALKRISIND","BALMLAWRIE","BALPHARMA","BALRAMCHIN","BANARBEADS","BANARISUG","BANCOINDIA","BANDHANBNK","BANKBARODA","BANKBEES","BANKINDIA","BANSWRAS","BARBEQUE","BASF","BASML","BATAINDIA","BAYERCROP","BBL","BBTC","BCLIND","BCP","BDL","BEARDSELL","BECTORFOOD","BEDMUTHA","BEL","BEML","BEPL","BERGEPAINT","BESTAGRO","BFINVEST","BFUTILITIE","BGRENERGY","BHAGERIA","BHAGYANGR","BHAGYAPROP","BHANDARI","BHARATFORG","BHARATGEAR","BHARATRAS","BHARTIARTL","BHEL","BIGBLOC","BIL","BINDALAGRO","BIOCON","BIOFILCHEM","BIRLACORPN","BIRLAMONEY","BIRLATYRE","BLBLIMITED","BLISSGVS","BLKASHYAP","BLS","BLUEDART","BLUESTARCO","BODALCHEM","BOMDYEING","BOROLTD","BORORENEW","BOSCHLTD","BPCL","BRIGADE","BRITANNIA","BRNL","BROOKS","BSE","BSL","BSLGOLDETF","BSLNIFTY","BSOFT","BURGERKING","BUTTERFLY","BYKE","CADILAHC","CALSOFT","CAMLINFINE","CAMS","CANBK","CANFINHOME","CANTABIL","CAPACITE","CAPLIPOINT","CAPTRUST","CARBORUNIV","CAREERP","CARERATING","CARTRADE","CASTROLIND","CCL","CEATLTD","CELEBRITY","CENTENKA","CENTEXT","CENTRALBK","CENTRUM","CENTUM","CENTURYPLY","CENTURYTEX","CERA","CEREBRAINT","CESC","CGCL","CHALET","CHAMBLFERT","CHEMBOND","CHEMCON","CHEMFAB","CHEMPLASTS","CHENNPETRO","CHOLAFIN","CHOLAHLDNG","CIGNITITEC","CIPLA","CLEAN","CLEDUCATE","CLNINDIA","CLSEL","CMICABLES","COALINDIA","COCHINSHIP","COFFEEDAY","COFORGE","COLPAL","COMPINFO","COMPUSOFT","CONCOR","CONFIPET","CONSOFINVT","CONTROLPR","CORALFINAC","CORDSCABLE","COROMANDEL","COSMOFILMS","COUNCODOS","CPSEETF","CRAFTSMAN","CREATIVEYE","CREDITACC","CRISIL","CROMPTON","CSBBANK","CTE","CUB","CUBEXTUB","CUMMINSIND","CUPID","CYBERTECH","CYIENT","DAAWAT","DABUR","DALBHARAT","DALMIASUG","DANGEE","DATAMATICS","DBCORP","DBL","DBREALTY","DCAL","DCBBANK","DCMNVL","DCMSHRIRAM","DCW","DECCANCE","DEEPAKFERT","DEEPAKNTR","DEEPINDS","DELPHIFX","DELTACORP","DELTAMAGNT","DEN","DENORA","DEVYANI","DFMFOODS","DHAMPURSUG","DHANBANK","DHANI","DHANUKA","DHUNINV","DIAMONDYD","DICIND","DISHTV","DIVISLAB","DIXON","DLF","DLINKINDIA","DMART","DODLA","DOLAT","DOLLAR","DONEAR","DPABHUSHAN","DPSCLTD","DPWIRES","DRCSYSTEMS","DREDGECORP","DRREDDY","DSSL","DTIL","DVL","DWARKESH","DYNAMATECH","DYNPRO","EASEMYTRIP","EASTSILK","EBANK","EBBETF0423","EBBETF0425","EBBETF0430","EBBETF0431","ECLERX","EDELWEISS","EICHERMOT","EIDPARRY","EIHAHOTELS","EIHOTEL","EIMCOELECO","EKC","ELECON","ELECTCAST","ELECTHERM","ELGIEQUIP","ELGIRUBCO","EMAMILTD","EMAMIPAP","EMAMIREAL","EMKAY","EMMBI","ENDURANCE","ENERGYDEV","ENGINERSIN","ENIL","EPL","EQUITAS","EQUITASBNK","ERIS","EROSMEDIA","ESABINDIA","ESCORTS","ESSARSHPNG","ESTER","EVEREADY","EVERESTIND","EXCELINDUS","EXIDEIND","EXXARO","FACT","FAIRCHEMOR","FCL","FCONSUMER","FDC","FEDERALBNK","FEL","FELDVR","FIEMIND","FILATEX","FINCABLES","FINEORG","FINPIPE","FLEXITUFF","FLFL","FLUOROCHEM","FMGOETZE","FMNL","FORCEMOT","FORTIS","FOSECOIND","FRETAIL","FSC","FSL","GABRIEL","GAEL","GAIL","GAL","GALAXYSURF","GALLANTT","GALLISPAT","GANDHITUBE","GANECOS","GANESHBE","GANESHHOUC","GANGAFORGE","GANGESSECU","GARFIBRES","GATI","GAYAPROJ","GDL","GEECEE","GEEKAYWIRE","GENCON","GENESYS","GENUSPOWER","GEOJITFSL","GEPIL","GESHIP","GET&D","GFLLIMITED","GFSTEELS","GHCL","GICHSGFIN","GICRE","GILLETTE","GINNIFILA","GIPCL","GISOLUTION","GKWLIMITED","GLAND","GLAXO","GLENMARK","GLFL","GLOBAL","GLOBALVECT","GLS","GMBREW","GMDCLTD","GMMPFAUDLR","GMRINFRA","GNA","GNFC","GOACARBON","GOCLCORP","GODFRYPHLP","GODREJAGRO","GODREJCP","GODREJIND","GODREJPROP","GOKEX","GOKUL","GOKULAGRO","GOLDBEES","GOLDENTOBC","GOLDIAM","GOLDSHARE","GOODLUCK","GOODYEAR","GPIL","GPPL","GPTINFRA","GRANULES","GRAPHITE","GRASIM","GRAUWEIL","GRAVITA","GREAVESCOT","GREENLAM","GREENPANEL","GREENPLY","GREENPOWER","GRINDWELL","GRINFRA","GROBTEA","GRPLTD","GRSE","GSCLCEMENT","GSFC","GSPL","GSS","GTNTEX","GTPL","GUFICBIO","GUJALKALI","GUJAPOLLO","GUJGASLTD","GULFOILLUB","GULFPETRO","HAL","HARRMALAYA","HATHWAY","HATSUN","HAVELLS","HBANKETF","HBLPOWER","HBSL","HCC","HCG","HCL-INSYS","HCLTECH","HDFC","HDFCAMC","HDFCBANK","HDFCLIFE","HDFCMFGETF","HDFCNIFETF","HDFCSENETF","HEG","HEIDELBERG","HEMIPROP","HERANBA","HERCULES","HERITGFOOD","HEROMOTOCO","HESTERBIO","HGINFRA","HIKAL","HIL","HILTON","HINDALCO","HINDCOMPOS","HINDCON","HINDCOPPER","HINDMOTORS","HINDOILEXP","HINDPETRO","HINDUNILVR","HINDZINC","HIRECT","HISARMETAL","HITECH","HITECHCORP","HITECHGEAR","HLEGLAS","HLVLTD","HMVL","HNDFDS","HNGSNGBEES","HOMEFIRST","HONAUT","HONDAPOWER","HPL","HSCL","HSIL","HTMEDIA","HUDCO","HUHTAMAKI","IBMFNIFTY","IBREALEST","IBULHSGFIN","ICEMAKE","ICICI500","ICICIALPLV","ICICIB22","ICICIBANK","ICICIBANKN","ICICIBANKP","ICICIFMCG","ICICIGI","ICICIGOLD","ICICILIQ","ICICILOVOL","ICICIM150","ICICIMCAP","ICICINF100","ICICINIFTY","ICICINV20","ICICINXT50","ICICIPHARM","ICICIPRULI","ICICISENSX","ICICITECH","ICIL","ICRA","IDBI","IDBIGOLD","IDEA","IDFC","IDFCFIRSTB","IDFNIFTYET","IEX","IFBAGRO","IFBIND","IFCI","IFGLEXPOR","IGARASHI","IGL","IGPL","IIFL","IIFLSEC","IIFLWAM","IITL","IMAGICAA","IMPAL","INDBANK","INDHOTEL","INDIACEM","INDIAGLYCO","INDIAMART","INDIANB","INDIANHUME","INDIGO","INDIGOPNTS","INDLMETER","INDNIPPON","INDOCO","INDORAMA","INDOSTAR","INDOTHAI","INDRAMEDCO","INDSWFTLAB","INDTERRAIN","INDUSINDBK","INDUSTOWER","INEOSSTYRO","INFIBEAM","INFRABEES","INFY","INGERRAND","INOXLEISUR","INOXWIND","INSECTICID","INTELLECT","INTENTECH","INTLCONV","INVENTURE","IOB","IOC","IOLCP","IPCALAB","IPL","IRB","IRCON","IRCTC","IRFC","ISEC","ISFT","ISGEC","ITC","ITDC","ITDCEM","ITI","IVC","IVP","IVZINGOLD","IVZINNIFTY","IZMO","J&KBANK","JAGRAN","JAGSNPHARM","JAIBALAJI","JAICORPLTD","JAIPURKURT","JAMNAAUTO","JASH","JAYAGROGN","JAYBARMARU","JAYSREETEA","JBCHEPHARM","JBMA","JCHAC","JHS","JINDALPHOT","JINDALPOLY","JINDALSAW","JINDALSTEL","JINDRILL","JINDWORLD","JISLDVREQS","JISLJALEQS","JKCEMENT","JKIL","JKLAKSHMI","JKPAPER","JKTYRE","JMA","JMCPROJECT","JMFINANCIL","JMTAUTOLTD","JOCIL","JPASSOCIAT","JPINFRATEC","JPOLYINVST","JPPOWER","JSL","JSLHISAR","JSWHL","JSWISPL","JSWSTEEL","JTEKTINDIA","JUBLFOOD","JUBLINDS","JUBLINGREA","JUBLPHARMA","JUMPNET","JUNIORBEES","JUSTDIAL","JYOTHYLAB","KABRAEXTRU","KAJARIACER","KAKATCEM","KALPATPOWR","KALYANKJIL","KAMATHOTEL","KAMDHENU","KANORICHEM","KANPRPLA","KANSAINER","KARDA","KARURVYSYA","KAUSHALYA","KAYA","KCP","KCPSUGIND","KDDL","KEC","KECL","KEERTI","KEI","KELLTONTEC","KENNAMET","KESORAMIND","KEYFINSERV","KHADIM","KHAICHEM","KHANDSE","KICL","KILITCH","KIMS","KINGFA","KIOCL","KIRIINDUS","KIRLFER","KIRLOSBROS","KIRLOSENG","KIRLOSIND","KITEX","KKCL","KMSUGAR","KNRCON","KOKUYOCMLN","KOLTEPATIL","KOTAKBANK","KOTAKBKETF","KOTAKGOLD","KOTAKIT","KOTAKNIFTY","KOTAKNV20","KOTAKPSUBK","KOTARISUG","KOTHARIPET","KOVAI","KPIGLOBAL","KPITTECH","KPRMILL","KRBL","KREBSBIO","KRIDHANINF","KRISHANA","KRSNAA","KSB","KSCL","KSL","KTKBANK","KUANTUM","L&TFH","LAGNAM","LALPATHLAB","LAOPALA","LASA","LAURUSLABS","LAXMIMACH","LEMONTREE","LFIC","LGBBROSLTD","LIBAS","LIBERTSHOE","LICHSGFIN","LICNETFGSC","LICNETFN50","LICNETFSEN","LICNFNHGP","LIKHITHA","LINCOLN","LINCPEN","LINDEINDIA","LIQUIDBEES","LIQUIDETF","LODHA","LOKESHMACH","LOVABLE","LT","LTI","LTTS","LUMAXIND","LUMAXTECH","LUPIN","LUXIND","LXCHEM","LYKALABS","LYPSAGEMS","M&M","M&MFIN","MACPOWER","MADHAV","MADHUCON","MADRASFERT","MAESGETF","MAFANG","MAFSETF","MAGADSUGAR","MAHABANK","MAHASTEEL","MAHEPC","MAHESHWARI","MAHINDCIE","MAHLIFE","MAHLOG","MAHSCOOTER","MAHSEAMLES","MAITHANALL","MAJESCO","MALUPAPER","MAN50ETF","MANAKALUCO","MANAKCOAT","MANAKSIA","MANAKSTEEL","MANALIPETC","MANAPPURAM","MANGALAM","MANGCHEFER","MANGLMCEM","MANINDS","MANINFRA","MANUGRAPH","MANXT50","MARALOVER","MARATHON","MARICO","MARINE","MARKSANS","MARUTI","MASFIN","MASPTOP50","MASTEK","MATRIMONY","MAXHEALTH","MAXIND","MAXVIL","MAYURUNIQ","MAZDA","MAZDOCK","MBAPL","MBLINFRA","MCDOWELL-N","MCL","MCX","MENONBE","MEP","METROPOLIS","MFL","MFSL","MGEL","MGL","MHRIL","MIDHANI","MINDACORP","MINDAIND","MINDTECK","MINDTREE","MIRZAINT","MITTAL","MMFL","MMP","MMTC","MODISNME","MOGSEC","MOIL","MOKSH","MOL","MOLDTKPAC","MOM100","MOM50","MON100","MONTECARLO","MORARJEE","MOREPENLAB","MOTHERSUMI","MOTILALOFS","MOTOGENFIN","MPHASIS","MPSLTD","MRF","MRO-TEK","MRPL","MSPL","MSTCLTD","MTARTECH","MTEDUCARE","MTNL","MUKTAARTS","MUNJALAU","MUNJALSHOW","MURUDCERA","MUTHOOTCAP","MUTHOOTFIN","NACLIND","NAGREEKCAP","NAHARCAP","NAHARPOLY","NAM-INDIA","NATCOPHARM","NATHBIOGEN","NATIONALUM","NATNLSTEEL","NAUKRI","NAVINFLUOR","NAVKARCORP","NAVNETEDUL","NAZARA","NBCC","NBIFIN","NBVENTURES","NCC","NCLIND","NCPSESDL24","NDL","NDTV","NECCLTD","NECLIFE","NELCAST","NELCO","NEOGEN","NESCO","NESTLEIND","NETF","NETFCONSUM","NETFDIVOPP","NETFGILT5Y","NETFIT","NETFLTGILT","NETFMID150","NETFNIF100","NETFNV20","NETFPHARMA","NETFSDL26","NETWORK18","NEULANDLAB","NEXTMEDIA","NFL","NH","NHPC","NIACL","NIBL","NIFTYBEES","NIITLTD","NILAINFRA","NILKAMAL","NIPPOBATRY","NIRAJ","NITCO","NITIRAJ","NLCINDIA","NMDC","NOCIL","NOIDATOLL","NORBTEAEXP","NOVARTIND","NPBET","NRAIL","NRBBEARING","NSIL","NTPC","NUCLEUS","NURECA","NUVOCO","NXTDIGITAL","OAL","OBEROIRLTY","OCCL","OFSS","OIL","OMAXE","OMINFRAL","OMKARCHEM","ONGC","ONMOBILE","ONWARDTEC","ORBTEXP","ORICONENT","ORIENTABRA","ORIENTALTL","ORIENTBELL","ORIENTCEM","ORIENTELEC","ORIENTHOT","ORIENTLTD","ORIENTPPR","ORISSAMINE","ORTINLAB","OSWALAGRO","PAGEIND","PAISALO","PALASHSECU","PALREDTEC","PANACEABIO","PANAMAPET","PAR","PARAGMILK","PARSVNATH","PATELENG","PATINTLOG","PATSPINLTD","PCJEWELLER","PDMJEPAPER","PDSMFL","PEARLPOLY","PEL","PENIND","PERSISTENT","PETRONET","PFC","PFIZER","PFOCUS","PFS","PGEL","PGHH","PGHL","PGIL","PHILIPCARB","PHOENIXLTD","PIDILITIND","PIIND","PILANIINVS","PILITA","PIONDIST","PIONEEREMB","PITTIENG","PLASTIBLEN","PNB","PNBGILTS","PNBHOUSING","PNC","PNCINFRA","PODDARHOUS","PODDARMENT","POKARNA","POLYCAB","POLYMED","POLYPLEX","POONAWALLA","POWERGRID","POWERINDIA","POWERMECH","PPAP","PPL","PRAKASH","PRAKASHSTL","PRAXIS","PRECAM","PRECOT","PRECWIRE","PREMIERPOL","PRESSMN","PRESTIGE","PRICOLLTD","PRIMESECU","PRINCEPIPE","PRITIKAUTO","PRIVISCL","PROZONINTU","PRSMJOHNSN","PSB","PSPPROJECT","PSUBNKBEES","PTC","PTL","PUNJABCHEM","PURVA","PVR","QGOLDHALF","QNIFTY","QUESS","QUICKHEAL","RADICO","RADIOCITY","RAILTEL","RAIN","RAJESHEXPO","RAJSREESUG","RALLIS","RAMANEWS","RAMCOCEM","RAMCOIND","RAMCOSYS","RANEENGINE","RANEHOLDIN","RATNAMANI","RAYMOND","RBL","RBLBANK","RCF","RCOM","RECLTD","REDINGTON","REFEX","RELAXO","RELCAPITAL","RELIANCE","RELIGARE","REPCOHOME","REPL","REPRO","RESPONIND","REVATHI","RGL","RHIM","RICOAUTO","RIIL","RITES","RKEC","RKFORGE","RML","ROHLTD","ROLEXRINGS","ROLLT","ROSSARI","ROSSELLIND","ROUTE","RPGLIFE","RPPINFRA","RPSGVENT","RSSOFTWARE","RSWM","RSYSTEMS","RUBYMILLS","RUCHI","RUCHIRA","RUPA","RUSHIL","RVHL","RVNL","SADBHAV","SADBHIN","SAFARI","SAGCEM","SAIL","SAKAR","SAKSOFT","SALASAR","SALONA","SALZERELEC","SANCO","SANDESH","SANDHAR","SANGAMIND","SANGHIIND","SANGHVIMOV","SANGINITA","SANOFI","SANSERA","SARDAEN","SARLAPOLY","SASKEN","SATIA","SATIN","SBCL","SBICARD","SBIETFCON","SBIETFIT","SBIETFPB","SBIETFQLTY","SBILIFE","SBIN","SCHAEFFLER","SCHAND","SCHNEIDER","SCI","SDBL","SEAMECLTD","SECURKLOUD","SELAN","SEPOWER","SEQUENT","SERVOTECH","SESHAPAPER","SETCO","SETF10GILT","SETFGOLD","SETFNIF50","SETFNIFBK","SETFNN50","SEYAIND","SFL","SGIL","SGL","SHAKTIPUMP","SHALBY","SHALPAINTS","SHANKARA","SHANTI","SHANTIGEAR","SHARDACROP","SHAREINDIA","SHARIABEES","SHILPAMED","SHIVAMAUTO","SHIVAMILLS","SHIVATEX","SHK","SHOPERSTOP","SHRADHA","SHREDIGCEM","SHREECEM","SHREEPUSHK","SHREERAMA","SHRENIK","SHREYANIND","SHREYAS","SHRIRAMCIT","SHRIRAMEPC","SHYAMCENT","SHYAMMETL","SICAL","SIEMENS","SIGIND","SILGO","SILLYMONKS","SIMPLEXINF","SINTERCOM","SINTEX","SIRCA","SIS","SITINET","SIYSIL","SJVN","SKFINDIA","SKIL","SKIPPER","SKMEGGPROD","SMARTLINK","SMCGLOBAL","SMLISUZU","SMSLIFE","SMSPHARMA","SNOWMAN","SOBHA","SOLARA","SOLARINDS","SOMANYCERA","SOMATEX","SONACOMS","SONATSOFTW","SORILINFRA","SOTL","SOUTHBANK","SOUTHWEST","SPAL","SPANDANA","SPARC","SPECIALITY","SPENCERS","SPIC","SPICEJET","SPLIL","SPTL","SREEL","SRF","SRHHYPOLTD","SRIPIPES","SRTRANSFIN","STAR","STARCEMENT","STARPAPER","STCINDIA","STEELCITY","STEELXIND","STEL","STERTOOLS","STLTECH","STOVEKRAFT","STYLAMIND","SUBEXLTD","SUBROS","SUDARSCHEM","SUMICHEM","SUMMITSEC","SUNCLAYLTD","SUNDARMFIN","SUNDARMHLD","SUNDRMBRAK","SUNDRMFAST","SUNFLAG","SUNPHARMA","SUNTECK","SUNTV","SUPERHOUSE","SUPPETRO","SUPRAJIT","SUPREMEENG","SUPREMEIND","SURANASOL","SURANAT&P","SURYAROSNI","SURYODAY","SUTLEJTEX","SUULD","SUVEN","SUVENPHAR","SUVIDHAA","SUZLON","SVPGLOB","SWANENERGY","SWARAJENG","SWELECTES","SWSOLAR","SYMPHONY","SYNGENE","TAJGVK","TAKE","TALBROAUTO","TANLA","TARAPUR","TARMAT","TASTYBITE","TATACHEM","TATACOFFEE","TATACOMM","TATACONSUM","TATAELXSI","TATAINVEST","TATAMETALI","TATAMOTORS","TATAMTRDVR","TATAPOWER","TATASTEEL","TATASTLLP","TATVA","TBZ","TCI","TCIDEVELOP","TCIEXP","TCIFINANCE","TCNSBRANDS","TCPLPACK","TCS","TDPOWERSYS","TEAMLEASE","TECHM","TECHNOE","TEJASNET","TEMBO","TEXINFRA","TEXMOPIPES","TEXRAIL","TFCILTD","TGBHOTELS","THANGAMAYL","THEINVEST","THERMAX","THOMASCOOK","THYROCARE","TIIL","TIINDIA","TIL","TIMESGTY","TIMETECHNO","TIMKEN","TINPLATE","TIRUMALCHM","TITAN","TMRVL","TNPETRO","TNPL","TOKYOPLAST","TORNTPHARM","TORNTPOWER","TOTAL","TPLPLASTEH","TREJHARA","TRENT","TRF","TRIDENT","TRIGYN","TRIL","TRITURBINE","TRIVENI","TTKHLTCARE","TTKPRESTIG","TTL","TV18BRDCST","TVSELECT","TVSMOTOR","TVSSRICHAK","TVTODAY","TWL","UBL","UCALFUEL","UCOBANK","UFLEX","UFO","UGARSUGAR","UGROCAP","UJAAS","UJJIVAN","UJJIVANSFB","ULTRACEMCO","UMANGDAIRY","UMESLTD","UNICHEMLAB","UNIDT","UNIENTER","UNIONBANK","UNITEDTEA","UNIVASTU","UNIVCABLES","UNIVPHOTO","UPL","URJA","USHAMART","UTIAMC","UTIBANKETF","UTINEXT50","UTINIFTETF","UTISENSETF","UTISXN50","V2RETAIL","VADILALIND","VAIBHAVGBL","VAISHALI","VAKRANGEE","VALIANTORG","VARDHACRLC","VARROC","VASCONEQ","VASWANI","VBL","VEDL","VENKEYS","VENUSREM","VERTOZ","VESUVIUS","VETO","VGUARD","VHL","VIDHIING","VIJAYA","VIKASECO","VIKASPROP","VIKASWSP","VIMTALABS","VINATIORGA","VINDHYATEL","VINEETLAB","VINYLINDIA","VIPIND","VIPULLTD","VISAKAIND","VISASTEEL","VISHAL","VISHNU","VISHWARAJ","VIVIDHA","VIVIMEDLAB","VLSFINANCE","VMART","VOLTAMP","VOLTAS","VRLLOG","VSSL","VSTIND","VSTTILLERS","VTL","WABAG","WABCOINDIA","WALCHANNAG","WATERBASE","WEBELSOLAR","WEIZMANIND","WELCORP","WELENT","WELINV","WELSPUNIND","WENDT","WESTLIFE","WHEELS","WHIRLPOOL","WILLAMAGOR","WINDLAS","WINDMACHIN","WIPRO","WOCKPHARMA","WONDERLA","WORTH","WSTCSTPAPR","XCHANGING","XPROINDIA","YAARII","YESBANK","YUKEN","ZEEL","ZEELEARN","ZEEMEDIA","ZENITHEXPO","ZENSARTECH","ZENTEC","ZODIACLOTH","ZOMATO","ZOTA","ZYDUSWELL"]

    for ticker in ticker_lis: # here we are looping through the given tickers 
        print(f"ticker - {ticker} selected.....")
        try:
            ts_DF = make_time_series(ticker, 90) # for creating the database check https://github.com/pillai-amal/NSE-timeseries-form-CSV-file-creator-and-SQL-appender- , here were a checking for the last 90 days
            if ts_DF['close'].iloc[-1] > 350: # considering only those stocks above 350 INR as the closing price 
                #taking all the techincal indicators as required 
                don = TA.DO(ts_DF) # google Donchain channel for more information, this is FinTA
                merged_file = pd.concat([ts_DF, don], axis=1)
                merged_file['RSI'] = TA.RSI(ts_DF, period = 14)
                mfi = TA.MFI(ts_DF, period = 40)
                efi = TA.EFI(ts_DF, period = 14)
                squ = TA.SQZMI(ts_DF, period =10)
                dmx = TA.DMI(ts_DF, period =10)
                merged_file = pd.concat([merged_file, mfi, efi, squ, dmx], axis=1)
                merged_file['DIRECT'] = merged_file['DI+'] - merged_file['DI-']
                max_prices, min_prices = [],[]
                prices_min = np.array(ts_DF['low'])
                prices_max = np.array(ts_DF['high'])
                dates = ts_DF.index
                dates_high, dates_low = [], []
                #finding the local maxima and local minima
                local_min_indx = argrelextrema(prices_min, np.less)[0]
                local_max_indx = argrelextrema(prices_max, np.greater)[0]
                for every_max in local_max_indx:
                    max_prices.append(prices_max[every_max])
                    dates_high.append(dates[every_max])
                for every_min in local_min_indx:
                    min_prices.append(prices_min[every_min])
                    dates_low.append(dates[every_min])

                #fitting a line 
                m_max,c_max = np.polyfit(local_max_indx, np.array(max_prices),1)
                m_min,c_min = np.polyfit(local_min_indx, np.array(min_prices),1)
                m_vol,c_vol = np.polyfit([x for x in range (1, len(ts_DF)+1)], np.array(ts_DF['volume']),1)
                #plotting
                if math.atan((m_max - m_min)/(1+ m_max*m_min)) < 0:      # check for upside breakouts
                    # if (ts_DF['close'].iloc[-1] > (m_max*(local_min_indx[-1])+c_min)) and (ts_DF['close'].iloc[-1] > merged_file['MIDDLE'].iloc[-1]):
                    if m_min > 0: #here we are checking only the ascending triangle breakouts
                        fig, ax = plt.subplots(2)
                        fig.suptitle(f" {ticker} - CLOSE PRICE VS DATE AND VOL.VS DATE")
                        ax[0].set_xlabel("DATE")
                        ax[0].set_ylabel("CLOSE PRICE")
                        ax[0].plot(ts_DF.index, ts_DF['close'], 'c')
                        ax[0].scatter(dates_high, max_prices)
                        ax[0].scatter(dates_low, min_prices)
                        ax[0].plot(dates_high, m_max*(local_max_indx)+c_max, 'b')
                        ax[0].plot(dates_low, m_min*(local_min_indx)+c_min, 'C1')
                        ax[1].set_xlabel("DATE")
                        ax[1].set_ylabel("VOLUME")
                        ax[1].step(ts_DF.index, ts_DF['volume'])
                        ax[1].plot(ts_DF.index, m_vol*np.array([x for x in range (1, len(ts_DF)+1)])+c_vol, 'fuchsia')
                        print(f"The last upper price calculated : {m_max*(local_max_indx[-1])+c_max}")
                        image = image_name % (ticker)
                        figure(figsize=(25, 12), dpi=80)
                        fig.savefig(f"C:/Users/pillai_amal/NSE_AMAL/BreakOut Images\{name}\{image}", bbox_inches = 'tight') #saving the potted images 
                        brokenout.append(ticker)
                        print(merged_file)
                        rsilis.append(merged_file['RSI'].iloc[-1])
                        mfilis.append(merged_file['40 period MFI'].iloc[-1])
                        dmxlis.append(merged_file['14 period Force Index'].iloc[-1])
                        squlis.append(merged_file['20 period SQZMI'].iloc[-1])
                        print(merged_file['DIRECT'].iloc[-1])
                        dmxlis_p.append(str(merged_file['DIRECT'].iloc[-1]))
                        price.append(merged_file['close'].iloc[-1])
                        m_max_lis.append(m_max)
                        m_min_lis.append(m_min)


                        max_prices.clear()
                        min_prices.clear()
                        dates_high.clear()
                        dates_low.clear()
                        fig.close()
        except:
            print(f"{ticker} is has some errors, probably its a new IPO")
        
    print(len(brokenout), len(rsilis), len(mfilis), len(dmxlis), len(squlis), len(dmxlis_p),len(price) )
    # final = pd.DataFrame({'TICKER' : brokenout, 'CMP': price, 'RSI': rsilis, 'MFI': mfilis,  'FORCE INDEX': dmxlis, 'SQMI' : squlis, 'DIRECTION': dmxlis_p, 'M_MAX' : m_min_lis, 'M_MIN' : m_min_lis}) # you can add as many technical indicators from finta as you want 
    final = pd.DataFrame({'TICKER' : brokenout})
    name = str(dt.date.today()) + '_potential_breakout'
    final.to_excel(f"C:/Users/pillai_amal/NSE_AMAL/BreakOut Images\{name}.xlsx")

if __name__ == '__main__':
    bo_potential()